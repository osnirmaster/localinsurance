spring.application.name=consumer-calculation-engine
server.port=1003

# Kafka
spring.kafka.properties.sasl.mechanism=PLAIN
# confluent local properties
spring.kafka.properties.bootstrap.servers=${KAFKA_BROKER_LISTENER}
#spring.kafka.properties.bootstrap.servers=localhost:29092
# confluent cloud properties
#spring.kafka.properties.bootstrap.servers=pkc-4v5zz.sa-east-1.aws.confluent.cloud:9092
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='${CONFLUENT_CLOUD_KEY}'   password='${CONFLUENT_CLOUD_SECRET}';
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='${REDHAT_CLOUD_ID}'   password='${REDHAT_CLOUD_SECRET}';
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.consumer.client-id=consumer-calculation-engine
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=consumer-calculation-engine
spring.kafka.listener.ack-mode=manual



# Aplicacao
app.topico-calculator=command-quote-calculator
app.tempo-nack-ms=10000
app.microservice.update-quote=${MARKET_SERVICE_HOST}

#Dynamodb Properties
aws.dynamodb.endpoint=${DYNAMODB_HOST}
#aws.dynamodb.endpoint=http://localhost:4566
aws.accesskey=123
aws.secretkey=123
aws.region=sa-east-1
amazon.aws.accesskey=123
amazon.aws.secretkey=123
#DynamoDB
spring.data.dynamodb.entity2ddl.auto = create-only